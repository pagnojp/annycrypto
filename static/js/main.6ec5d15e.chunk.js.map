{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","isDarkTheme","setIsDarkTheme","setError","isLoaded","setIsLoaded","items","setItems","selected","setSelected","active","setActive","useEffect","fetch","then","res","json","result","Data","error","Frame","Loading","handleThemeChange","useCallback","toggleModal","theme","colors","surface","onsurface","colorScheme","logo","width","topBarSource","url","accessibilityLabel","topBarMarkup","TopBar","AppProvider","i18n","Polaris","topBar","Page","title","fullWidth","Card","Section","ResourceList","renderItem","item","CoinInfo","DISPLAY","ResourceItem","id","Id","media","Avatar","size","name","Name","source","ImageUrl","FullName","onClick","TextStyle","variation","USD","PRICE","VOLUME24HOUR","Stack","alignment","distribution","Button","Modal","open","onClose","primaryAction","content","onAction","Header","DescriptionList","term","description","Algorithm","ProofType","Rating","Weiss","NetHashesPerSecond","BlockNumber","BlockTime","BlockReward","AssetLaunchDate","MaxSupply","Link","Url","external","spacing","ReactDOM","render","enTranslations","document","getElementById"],"mappings":"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","file":"static/js/main.6ec5d15e.chunk.js","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\nimport {\n  Button,\n  TopBar,\n  AppProvider,\n  Frame,\n  Card,\n  ResourceList,\n  ResourceItem,\n  TextStyle,\n  Page,\n  Avatar,\n  Loading,\n  Modal,\n  DescriptionList,\n  Stack,\n  Link\n} from '@shopify/polaris';\n\ninterface ICoinInfo {\n  Name: string;\n  FullName: string\n  ImageUrl: string\n  Url: string\n  Algorithm: string\n  ProofType: string\n  Rating: { Weiss: {Rating:string}}\n  NetHashesPerSecond: number\n  BlockNumber: number\n  BlockTime: number\n  BlockReward: number\n  AssetLaunchDate: string\n  MaxSupply: number\n}\n\nexport function App() {\n  const [isDarkTheme, setIsDarkTheme] = useState(false); \n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [selected, setSelected] = useState<ICoinInfo>();\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result.Data);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  error && (<div>Error: {error}</div>)\n  !isLoaded && (<Frame><Loading /></Frame>)\n  \n  const handleThemeChange = useCallback(\n    () => setIsDarkTheme((isDarkTheme) => !isDarkTheme),\n    [],\n  );\n\n  const toggleModal = useCallback(() => setActive((active) => !active), []);\n\n  const theme:{} = {\n    colors: {\n      surface: '#FFFFFF',\n      onsurface: '#212B36',\n    },\n    colorScheme: isDarkTheme ? 'dark' : 'light',\n    logo: {\n      width: 193,\n      topBarSource: `Logo_anny.svg`,\n      url: '/',\n      accessibilityLabel: 'Trade Smarter',\n    },\n  };\n\n  const topBarMarkup = (\n    <TopBar />\n  );\n\n  return (\n    <AppProvider\n        theme={theme}\n        i18n={{\n          Polaris: {},\n        }}\n    >\n      <Frame topBar={topBarMarkup}>\n        <Page title=\"Toplist by Market Cap\" fullWidth>\n          <Card>\n            <Card.Section>\n            <ResourceList\n              items={items}\n              renderItem={(item) => {\n                const {CoinInfo, DISPLAY}:any = item;\n                return (\n                  <ResourceItem\n                    id={CoinInfo.Id}\n                    url={''}\n                    media={\n                      <Avatar size=\"medium\" name={`${CoinInfo.Name}`} source={`https://www.cryptocompare.com/${CoinInfo.ImageUrl}`} />\n                    }\n                    accessibilityLabel={`View details for ${CoinInfo.FullName}`}\n                    onClick={()=>{toggleModal(); setSelected(CoinInfo)}}\n                  > \n                    <TextStyle variation=\"strong\">{`${CoinInfo.FullName}`} ({`${CoinInfo.Name}`})</TextStyle><br />\n                    <TextStyle variation=\"subdued\">Price: {`${DISPLAY.USD.PRICE}`}</TextStyle><br />\n                    <TextStyle variation=\"subdued\">24H Volume: {`${DISPLAY.USD.VOLUME24HOUR}`}</TextStyle>\n                  </ResourceItem>\n                );\n              }}\n            />\n            </Card.Section>\n            <Card.Section>\n              <Stack alignment=\"trailing\" distribution=\"equalSpacing\">\n              <TextStyle variation=\"subdued\">\n                Made with ðŸ§¡ Â© 2021\n              </TextStyle>\n              <Button size=\"slim\" onClick={handleThemeChange}>\n                {!!isDarkTheme ? 'light theme' : 'dark theme'}\n              </Button>\n              </Stack>\n            </Card.Section>\n          </Card>\n        \n          <Modal\n          open={active}\n          onClose={toggleModal}\n          title=\"Coin Info\"\n          primaryAction={{\n            content: 'Close',\n            onAction: toggleModal,\n          }}\n          >\n            <Modal.Section>\n              <Card>\n                <Card.Header title={`${selected?.FullName} (${selected?.Name})`}>\n                  <Avatar size=\"medium\" name={`${selected?.Name}`} source={`https://www.cryptocompare.com/${selected?.ImageUrl}`} />\n                </Card.Header>\n                <Card.Section>\n                  <DescriptionList\n                    items={[\n                      {\n                        term: 'Algorithm',\n                        description: `${selected?.Algorithm}`,\n                      },\n                      {\n                        term: 'ProofType',\n                        description: `${selected?.ProofType}`,\n                      },\n                      {\n                        term: 'Rating',\n                        description: `${selected?.Rating.Weiss.Rating}`,\n                      },\n                      {\n                        term: 'NetHashesPerSec',\n                        description: `${selected?.NetHashesPerSecond}`,\n                      },\n                      {\n                        term: 'BlockNumber',\n                        description: `${selected?.BlockNumber}`,\n                      },\n                      {\n                        term: 'BlockTime',\n                        description: `${selected?.BlockTime}`,\n                      },\n                      {\n                        term: 'BlockReward',\n                        description: `${selected?.BlockReward}`,\n                      },\n                      {\n                        term: 'AssetLaunchDate',\n                        description: `${selected?.AssetLaunchDate}`,\n                      },\n                      {\n                        term: 'MaxSupply',\n                        description: `${selected?.MaxSupply}`,\n                      },\n                      {\n                        term: 'Overview',\n                        description: <Link url={`https://www.cryptocompare.com${selected?.Url}`} external>\n                          CryptoCompare\n                        </Link>,\n                      },\n                    ]} spacing=\"tight\"\n                  />\n                </Card.Section>\n              </Card>\n            </Modal.Section>\n          </Modal>\n        </Page>  \n      </Frame>\n    </AppProvider>  \n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {AppProvider} from '@shopify/polaris';\nimport enTranslations from '@shopify/polaris/locales/en.json';\n\nimport '@shopify/polaris/dist/styles.css';\nimport {App} from './App';\n\nReactDOM.render(\n  <AppProvider i18n={enTranslations}>\n    <App />\n  </AppProvider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}